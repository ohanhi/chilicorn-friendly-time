Elm.Main = Elm.Main || {};
Elm.Main.make = function (_elm) {
   "use strict";
   _elm.Main = _elm.Main || {};
   if (_elm.Main.values) return _elm.Main.values;
   var _U = Elm.Native.Utils.make(_elm),
   $Basics = Elm.Basics.make(_elm),
   $Debug = Elm.Debug.make(_elm),
   $Json$Encode = Elm.Json.Encode.make(_elm),
   $List = Elm.List.make(_elm),
   $Maybe = Elm.Maybe.make(_elm),
   $ReactNative$NativeApp = Elm.ReactNative.NativeApp.make(_elm),
   $ReactNative$ReactNative = Elm.ReactNative.ReactNative.make(_elm),
   $ReactNative$Style = Elm.ReactNative.Style.make(_elm),
   $Result = Elm.Result.make(_elm),
   $Signal = Elm.Signal.make(_elm);
   var _op = {};
   var init = Elm.Native.Port.make(_elm).inboundSignal("init",
   "()",
   function (v) {
      return typeof v === "object" && v instanceof Array ? {ctor: "_Tuple0"} : _U.badPort("an array",v);
   });
   var button = F4(function (address,action,color,content) {
      return A3($ReactNative$ReactNative.text,
      _U.list([$ReactNative$Style.color("white")
              ,$ReactNative$Style.textAlign("center")
              ,$ReactNative$Style.backgroundColor(color)
              ,$ReactNative$Style.paddingTop(5)
              ,$ReactNative$Style.paddingBottom(5)
              ,$ReactNative$Style.width(30)
              ,$ReactNative$Style.fontWeight("bold")
              ,$ReactNative$Style.shadowColor("#000")
              ,$ReactNative$Style.shadowOpacity(0.25)
              ,A2($ReactNative$Style.shadowOffset,1,1)
              ,$ReactNative$Style.shadowRadius(5)
              ,$ReactNative$Style.transform(_U.update($ReactNative$Style.defaultTransform,{rotate: $Maybe.Just("10deg")}))]),
      $Maybe.Just(A2($ReactNative$ReactNative.onPress,address,action)),
      content);
   });
   var update = F2(function (action,model) {    var _p0 = action;if (_p0.ctor === "Increment") {    return model + 1;} else {    return model - 1;}});
   var Decrement = {ctor: "Decrement"};
   var Increment = {ctor: "Increment"};
   var view = F2(function (address,count) {
      return A2($ReactNative$ReactNative.view,
      _U.list([$ReactNative$Style.alignItems("center")]),
      _U.list([A2($ReactNative$ReactNative.image,
              _U.list([$ReactNative$Style.height(64),$ReactNative$Style.width(64),$ReactNative$Style.marginBottom(30)]),
              "https://raw.githubusercontent.com/futurice/spiceprogram/master/assets/img/logo/chilicorn_no_text-128.png")
              ,A3($ReactNative$ReactNative.text,
              _U.list([$ReactNative$Style.textAlign("center"),$ReactNative$Style.marginBottom(30)]),
              $Maybe.Nothing,
              A2($Basics._op["++"],"Counter: ",$Basics.toString(count)))
              ,A2($ReactNative$ReactNative.view,
              _U.list([$ReactNative$Style.width(80),$ReactNative$Style.flexDirection("row"),$ReactNative$Style.justifyContent("space-between")]),
              _U.list([A4(button,address,Decrement,"#d33","-"),A4(button,address,Increment,"#3d3","+")]))]));
   });
   var model = 9000;
   var viewTree = Elm.Native.Port.make(_elm).outboundSignal("viewTree",
   function (v) {
      return v;
   },
   $ReactNative$NativeApp.start({model: model,view: view,update: update,init: init}));
   return _elm.Main.values = {_op: _op,model: model,view: view,Increment: Increment,Decrement: Decrement,update: update,button: button};
};